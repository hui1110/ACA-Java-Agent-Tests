FROM alpine:latest as maven-builder
ARG PROJECT_NAME
ARG TAG_NAME
ENV PROJECT_NAME=${PROJECT_NAME}
ENV TAG_NAME=${TAG_NAME}

RUN apk update
RUN if echo $TAG_NAME | grep -q "11" ; then \
         apk add --no-cache openjdk11 && apk add --no-cache maven; \
    elif echo $TAG_NAME | grep -q "17" ; then \
         apk add --no-cache openjdk17 && apk add --no-cache maven; \
    elif echo $TAG_NAME | grep -q "21" ; then \
         apk add --no-cache openjdk21 && apk add --no-cache maven; \
    else \
         apk add --no-cache openjdk8 && apk add --no-cache maven; \
    fi

COPY . /app
WORKDIR /app
RUN mvn clean install -pl ACA-Java-Agent-Log-Level/${PROJECT_NAME} -DskipTests

FROM tomcat:8.5-jdk21-openjdk
ARG PROJECT_NAME
ENV PROJECT_NAME=${PROJECT_NAME}
RUN rm -fr /usr/local/tomcat/webapps/*
COPY --from=maven-builder /app/ACA-Java-Agent-Log-Level/${PROJECT_NAME}/target/*.war /usr/local/tomcat/webapps/ROOT.war
RUN mkdir /usr/local/tomcat/agent && wget -O agent.jar https://huiagentaccount.blob.core.windows.net/ja-agent/ja-agent.jar && cp agent.jar /usr/local/tomcat/agent/ && wget -O opentelemetry-javaagent.jar https://huiagentaccount.blob.core.windows.net/opentelemetry-javaagent/opentelemetry-javaagent.jar && cp opentelemetry-javaagent.jar /usr/local/tomcat/agent/
ADD setACAOTLPEnv.sh /usr/local/tomcat/bin/setenv.sh
RUN chmod +x /usr/local/tomcat/bin/setenv.sh

CMD ["catalina.sh","run"]